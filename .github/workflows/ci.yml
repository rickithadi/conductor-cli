name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test --if-present
    
    - name: Build project
      run: npm run build
    
    - name: Test CLI commands
      run: |
        node dist/cli.js --help
        node dist/cli.js status
        node dist/cli.js agents
        node dist/cli.js checkpoint --help

  demo:
    name: Demo Multi-Agent CLI
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build CLI
      run: npm run build
    
    - name: Create demo project
      run: |
        mkdir demo-project
        cd demo-project
        npm init -y
        echo '{ "dependencies": { "react": "^18.0.0", "next": "^14.0.0" } }' > package.json
    
    - name: Test multi-agent initialization
      run: |
        cd demo-project
        node ../dist/cli.js init --force --no-vscode
    
    - name: Verify generated files
      run: |
        cd demo-project
        ls -la
        cat claude.md | head -20
        echo "âœ… Multi-agent setup works!"

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, demo]
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'release:')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        files: |
          dist/**
          templates/**